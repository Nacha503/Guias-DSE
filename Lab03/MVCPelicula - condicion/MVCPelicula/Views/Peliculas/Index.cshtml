@*esta es mi lista de peliculas guardas en la BD*@

@model IEnumerable<MVCPelicula.Models.Pelicula>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Nueva Pelicula", "Create");

    @*el metodo BeginForm por defecto se publica sobre la misma vista (vuelve a recargar la pagina luego de haber procesado la inf. del formulario*@
    @using (Html.BeginForm("Index", "Peliculas", FormMethod.Get)) // lo que estamos haciendo ahora es decirle que cuando se ejecute accion submit del boton debe responder como si fuera una peticion Get osea
                                                                 // mostrar la informacion del contenido de los campos del formulario que se envia
    {
    <p>
        @*al dropdownlist se le pasa el nombre de la propiedad que guardó la lista de genero en el controller usando el viewbag*@
        Genre: @Html.DropDownList("generoPelicula", "All")
        Title: @Html.TextBox("buscarString") <br />
        Price: @Html.TextBox("precio")
        <input type="submit" value="Filtrar" />
    </p>
}

    </p>
    <table class="table">
        <tr>
            <th>
                @*como sabe que se está haciendo match con la clase Models/Pelicula*@
                @Html.DisplayNameFor(model => model.Titulo);
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FechaLanzamiento)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Genero)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Precio)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @* que diferencia hay entre modelItem y item *@
                    @Html.DisplayFor(modelItem => item.Titulo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FechaLanzamiento)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genero)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Precio)
                </td>
                <td>
                    @Html.ActionLink("Editar", "Edit", new { id = item.ID }) |
                    @Html.ActionLink("Detalles", "Details", new { id = item.ID }) |
                    @Html.ActionLink("Eliminar", "Delete", new { id = item.ID })
                </td>
            </tr>
        }

    </table>
